namespace CashApp
{
    public partial class Form1 : Form
    {
        private string Items;
        private double discount, payment, price, change, ConvDiscount, DiscuntPrice, amount, quantity;

        public Form1()
        {
            InitializeComponent();
        }

        private void label1_Click(object sender, EventArgs e)
        {
            // Your label click logic here
        }

        private void label8_Click(object sender, EventArgs e)
        {
            // Your label click logic here
        }

        private void ComputeBT_Click(object sender, EventArgs e)
        {
            string invalidMessage = "Please complete your data.";
            string inputErrorMessage = "Input error: Please enter valid numeric values.";
            Items = ItemsTB.Text;

            // Validate and parse inputs
            if (!double.TryParse(PriceTB.Text, out price))
            {
                MessageBox.Show(inputErrorMessage);
                return;
            }

            if (!double.TryParse(QuantityTB.Text, out quantity))
            {
                MessageBox.Show(inputErrorMessage);
                return;
            }

            if (!double.TryParse(DiscuntTB.Text, out discount))
            {
                MessageBox.Show(inputErrorMessage);
                return;
            }

            // Check if item name is provided
            if (string.IsNullOrWhiteSpace(Items))
            {
                MessageBox.Show(invalidMessage);
                return;
            }

            ConvDiscount = discount * 0.01;
            DiscuntPrice = price - (price * ConvDiscount);
            amount = DiscuntPrice * quantity;
            AmountLB.Text = amount.ToString("F2");
        }

        private void SumbitBT_Click(object sender, EventArgs e)
        {
            string invalidPaymentMessage = "MAG BAYAD KA!!";
            string invalidAmountMessage = "KULOANG PAGBAYAD MO";
            string inputErrorMessage = "Input error: Please enter valid numeric values.";

            // Validate and parse payment input
            if (!double.TryParse(PaymentTB.Text, out payment))
            {
                MessageBox.Show(inputErrorMessage);
                return;
            }

            // Check if amount has been calculated
            if (amount <= 0)
            {
                MessageBox.Show(invalidPaymentMessage);
                return;
            }

            // Calculate change
            change = payment - amount;

            if (change < 0)
            {
                MessageBox.Show(invalidAmountMessage);
                return;
            }

            ChangeLB.Text = change.ToString("F2");
        }
    }
}
